openapi: 3.0.3
info:
  title: Thesis Proposal
  version: 1.0.0
components:
  schemas:
    userCredentials:
      type: object
      properties:
        username:
          oneOf:
            - type: string
              format: email
              pattern: ^[a-z]+\.[a-z]+@polito\.it$
            - type: string
              format: email
              pattern: ^(s|S)[0-9]{6}@studenti\.polito\.it$
        password:
          type: string
          minLength: 7
          maxLength: 20
      additionalProperties: false
      required:
        - username
        - password
    professor:
      type: object
      properties:
        professorId:
          type: string
          pattern: ^(p|P)[0-9]{6}$
        name:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        surname:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        email:
          type: string
          format: email
          pattern: ^[a-z]+\.[a-z]+@polito\.it$
        codGroup:
          type: string
          pattern: ^CG_[0-9]{2}$
        codDepartment:
          type: string
          pattern: ^CD_[0-9]{2}$
        self:
          type: string
          format: uri
      additionalProperties: false
      required:
        - email
    professors:
      type: array
      items:
        type: object
        properties:
          professorId:
            type: string
            pattern: ^(p|P)[0-9]{6}$
          name:
            type: string
            pattern: ^[a-zA-Z ]+$
            minLength: 1
          surname:
            type: string
            pattern: ^[a-zA-Z ]+$
            minLength: 1
          self:
            type: string
            format: uri
        additionalProperties: false
    student:
      type: object
      properties:
        studentId:
          type: string
          pattern: ^(s|S)[0-9]{6}$
        name:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        surname:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        gender:
          enum:
            - male
            - female
            - other
        email:
          type: string
          format: email
          pattern: ^(s|S)[0-9]{6}@studenti\.polito\.it$
        codDegree:
          type: string
          pattern: ^LM?-([1-9]|[1-9][0-9])$
        nationality:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        enrollmentYear:
          type: integer
        cv:
          type: string
          format: uri
        self:
          type: string
          format: uri
      additionalProperties: false
      required:
        - email
    application:
      type: object
      properties:
        thesisProposalId:
          type: integer
        thesisProposalTitle:
          type: string
          minLength: 1
        applicant:
          type: object
          properties:
            studentId:
              type: string
              pattern: ^(s|S)[0-9]{6}$
            name:
              type: string
              minLength: 1
            surname:
              type: string
              minLength: 1
            student:
              type: string
              format: uri
          additionalProperties: false
        message:
          type: string
          maxLength: 1000
        date:
          type: string
          format: date
        isReadedByProfessor:
          type: boolean
          default: false
        isReadedByStudent:
          type: boolean
          default: false
        isAccepted:
          enum:
            - Rejected
            - Pending
            - Accepted
          default: Pending
        self:
          type: string
          format: uri
      additionalProperties: false
      required:
        - thesisProposalId
    applications:
      type: array
      items:
        type: object
        properties:
          thesisProposalId:
            type: integer
            minimum: 1
          thesisProposalTitle:
            type: string
            minLength: 1
          date:
            type: string
            format: date
          self:
            type: string
            format: uri
        additionalProperties: false
    thesisProposal:
      type: object
      properties:
        thesisProposalId:
          type: integer
          minimum: 1
        title:
          type: string
          minLength: 1
        supervisor:
          type: object
          properties:
            professorId:
              type: string
              pattern: ^(p|P)[0-9]{6}$
            name:
              type: string
              minLength: 1
            surname:
              type: string
              minLength: 1
            professor:
              type: string
              format: uri
          additionalProperties: false
        coSupervisor:
          type: array
          items:
            type: object
            properties:
              coSupervisorId:
                type: string
                pattern: ^((p|P)|(e|E))[0-9]{6}$
              name:
                type: string
                minLength: 1
              surname:
                type: string
                minLength: 1
              coSupervisor:
                type: string
                format: uri
            additionalProperties: false
            required:
              - coSupervisorId
        keywords:
          type: array
          items:
            type: string
          minItems: 1
        thesisType:
          type: string
          minLength: 1
        abroad:
          type: boolean
        groups:
          type: array
          items:
            type: string
            minLength: 1
          minItems: 1
        description:
          type: string
          minLength: 1
          maxLength: 1000
        requirements:
          type: string
          minLength: 1
          maxLength: 1000
        notes:
          type: string
          minLength: 1
          maxLength: 1000
        expirationDate:
          type: string
          format: date
        level:
          enum:
            - BSc
            - MSc
        CdS:
          type: array
          items:
            type: object
            properties:
              degreeId:
                type: string
                pattern: ^LM?-([1-9]|[1-9][0-9])$
              titleDegree:
                type: string
                minLength: 1
            required:
              - degreeId
            additionalProperties: false
          minItems: 1
        isArchieved:
          type: boolean
          default: false
        self:
          type: string
          format: uri
      additionalProperties: false
      required:
        - title
        - keywords
        - thesisType
        - description
        - requirements
        - expirationDate
        - level
        - CdS
    thesisProposals:
      type: array
      items:
        type: object
        properties:
          thesisProposalId:
            type: integer
            minimum: 1
          title:
            type: string
            minLength: 1
          name:
            type: string
            minLength: 1
          surname:
            type: string
            minLength: 1
          keywords:
            type: array
            items:
              type: string
            minItems: 1
          expirationDate:
            type: string
            format: date
          self:
            type: string
            format: uri
        additionalProperties: false
    externalCoSupervisor:
      type: object
      properties:
        externalCoSupervisorId:
          type: string
          pattern: ^(e|E)[0-9]{6}$
        name:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        surname:
          type: string
          pattern: ^[a-zA-Z ]+$
          minLength: 1
        email:
          type: string
          format: email
        company:
          type: string
          minLength: 1
        self:
          type: string
          format: uri
      additionalProperties: false
    externalCoSupervisors:
      type: array
      items:
        type: object
        properties:
          externalCoSupervisorId:
            type: string
            pattern: ^(e|E)[0-9]{6}$
          name:
            type: string
            pattern: ^[a-zA-Z ]+$
            minLength: 1
          surname:
            type: string
            pattern: ^[a-zA-Z ]+$
            minLength: 1
          self:
            type: string
            format: uri
        additionalProperties: false
    degrees:
      type: array
      items:
        type: object
        properties:
          degreeId:
            type: string
            pattern: ^LM?-([1-9]|[1-9][0-9])$
          titleDegree:
            type: string
            minLength: 1
        additionalProperties: false
    keywords:
      type: array
      items:
        type: string
        minLength: 1
        additionalProperties: false
tags:
  - name: user
  - name: professor
  - name: student
  - name: thesisProposal
  - name: application
  - name: externalCoSupervisor
  - name: degree
  - name: keyword
paths:
  /professors:
    get:
      tags:
        - professor
      operationId: getProfessors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/professors"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /professors/{professorId}:
    get:
      tags:
        - professor
      operationId: getProfessorById
      parameters:
        - name: professorId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/professor"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /professors/{professorId}/thesisProposals:
    get:
      tags:
        - thesisProposal
      operationId: getThesisProposalsOfProfessor
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
        - name: professorId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thesisProposals"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      tags:
        - thesisProposal
      operationId: insertNewThesisProposal
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
        - name: professorId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/thesisProposal"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thesisProposal"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /student/{studentId}:
    get:
      tags:
        - student
      operationId: getStudentById
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(s|S)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/student"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /student/{studentId}/applications:
    get:
      tags:
        - application
      operationId: getAllApplicationsOfStudent
      parameters:
        - name: authenticatedUserId
          in: cookie
          description: >-
            The authenticated user id corresponds to the student that perform
            this request
          required: true
          schema:
            type: string
            pattern: ^(s|S)[0-9]{6}$
        - name: studentId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(s|S)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/applications"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    post:
      tags:
        - application
      operationId: insertNewApplication
      parameters:
        - name: authenticatedUserId
          in: cookie
          description: >-
            The authenticated user id corresponds to the student that perform
            this request
          required: true
          schema:
            type: string
        - name: studentId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(s|S)[0-9]{6}$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/application"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /thesisProposals:
    get:
      tags:
        - thesisProposal
      operationId: getThesisProposals
      parameters:
        - name: codDegree
          description: >-
            The codDegree is about the degree that the student, that perform
            this request, attends
          in: cookie
          required: true
          schema:
            type: string
        - name: keywords
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: supervisor
          in: query
          required: false
          schema:
            type: string
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: inCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: abroad
          in: query
          required: false
          schema:
            type: boolean
        - name: expirationDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thesisProposals"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /thesisProposals/{thesisProposalId}:
    get:
      tags:
        - thesisProposal
      operationId: getThesisProposal
      parameters:
        - name: thesisProposalId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/thesisProposal"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /applications:
    get:
      tags:
        - application
      operationId: getApplications
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/applications"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /applications/{applicationId}:
    get:
      tags:
        - application
      operationId: getApplication
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/application"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /externalCoSupervisors:
    get:
      tags:
        - externalCoSupervisor
      operationId: getExternalCoSupervisors
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalCoSupervisors"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /externalCoSupervisors/{externalCoSupervisorId}:
    get:
      tags:
        - externalCoSupervisor
      operationId: getExternalCoSupervisorById
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^((p|P)|(s|S))[0-9]{6}$
        - name: externalCoSupervisorId
          in: path
          required: true
          schema:
            type: string
            pattern: ^(e|E)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalCoSupervisor"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /degrees:
    get:
      tags:
        - degree
      operationId: getDegrees
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/degrees"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /keywords:
    get:
      tags:
        - keyword
      operationId: getKeywords
      parameters:
        - name: authenticatedUserId
          in: cookie
          required: true
          description: >-
            The authenticated user id corresponds to the professor that perform
            this request
          schema:
            type: string
            pattern: ^(p|P)[0-9]{6}$
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/keywords"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /authenticatedSession:
    post:
      tags:
        - user
      operationId: createNewAuthenticatedSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userCredentials"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/student"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /authenticatedSession/{userId}:
    delete:
      tags:
        - user
      operationId: deleteAuthenticatedSession
      parameters:
        - name: authenticatedUserId
          in: cookie
          description: >-
            The authenticated user id corresponds to the professor or student
            that perform this request
          required: true
          schema:
            type: string
            pattern: ^((p|P)|(s|S))[0-9]{6}$
        - name: userId
          in: path
          description: >-
            The authenticated user id corresponds to the professor or student
            that perform this request
          required: true
          schema:
            type: string
            pattern: ^((p|P)|(s|S))[0-9]{6}$
      responses:
        "203":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
