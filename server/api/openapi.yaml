openapi: 3.0.3
info:
  title: Thesis Proposal
  version: 1.0.0
servers:
- url: /
tags:
- name: user
- name: professor
- name: student
- name: thesisProposal
- name: application
- name: externalCoSupervisor
paths:
  /professors:
    get:
      tags:
      - professor
      operationId: getProfessors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/professors'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Professor
  /professors/{professorId}:
    get:
      tags:
      - professor
      operationId: getProfessorById
      parameters:
      - name: professorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/professor'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Professor
  /professors/{professorId}/thesisProposals:
    get:
      tags:
      - thesisProposal
      operationId: getThesisProposalsOfProfessor
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      - name: professorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/thesisProposals'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ThesisProposal
    post:
      tags:
      - thesisProposal
      operationId: insertNewThesisProposal
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      - name: professorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thesisProposal'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/thesisProposal'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ThesisProposal
  /student/{studentId}:
    get:
      tags:
      - student
      operationId: getStudentById
      parameters:
      - name: studentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Student
  /student/{studentId}/applications:
    get:
      tags:
      - application
      operationId: getAllApplicationsOfStudent
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the student that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
      - name: studentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applications'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Application
    post:
      tags:
      - application
      operationId: insertNewApplication
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the student that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: studentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Application
  /thesisProposals:
    get:
      tags:
      - thesisProposal
      operationId: getThesisProposals
      parameters:
      - name: codDegree
        in: cookie
        description: "The codDegree is about the degree that the student, that perform\
          \ this request, attends"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: keywords
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: supervisor
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: inCompany
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: abroad
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expirationDate
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/thesisProposals'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ThesisProposal
  /thesisProposals/{thesisProposalId}:
    get:
      tags:
      - thesisProposal
      operationId: getThesisProposal
      parameters:
      - name: thesisProposalId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/thesisProposal'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ThesisProposal
  /applications:
    get:
      tags:
      - application
      operationId: getApplications
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applications'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Application
  /applications/{applicationId}:
    get:
      tags:
      - application
      operationId: getApplication
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      - name: applicationId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: Application
  /externalCoSupervisors:
    get:
      tags:
      - externalCoSupervisor
      operationId: getExternalCoSupervisors
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalCoSupervisors'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ExternalCoSupervisor
  /externalCoSupervisors/{externalCoSupervisorId}:
    get:
      tags:
      - externalCoSupervisor
      operationId: getExternalCoSupervisorById
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor that perform
          this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^((p|P)|(s|S))[0-9]{6}$"
          type: string
      - name: externalCoSupervisorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^(e|E)[0-9]{6}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalCoSupervisor'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: ExternalCoSupervisor
  /authenticatedSession:
    post:
      tags:
      - user
      operationId: createNewAuthenticatedSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCredentials'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-swagger-router-controller: User
  /authenticatedSession/{userId}:
    delete:
      tags:
      - user
      operationId: deleteAuthenticatedSession
      parameters:
      - name: authenticatedUserId
        in: cookie
        description: The authenticated user id corresponds to the professor or student
          that perform this request
        required: true
        style: form
        explode: true
        schema:
          pattern: "^((p|P)|(s|S))[0-9]{6}$"
          type: string
      - name: userId
        in: path
        description: The authenticated user id corresponds to the professor or student
          that perform this request
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^((p|P)|(s|S))[0-9]{6}$"
          type: string
      responses:
        "203":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      x-swagger-router-controller: User
components:
  schemas:
    userCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          oneOf:
          - pattern: "^[a-z]+\\.[a-z]+@polito\\.it$"
            type: string
            format: email
          - pattern: "^(s|S)[0-9]{6}@studenti\\.polito\\.it$"
            type: string
            format: email
        password:
          maxLength: 20
          minLength: 7
          type: string
      additionalProperties: false
    professor:
      required:
      - email
      type: object
      properties:
        professorId:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
        name:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        surname:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        email:
          pattern: "^[a-z]+\\.[a-z]+@polito\\.it$"
          type: string
          format: email
        codGroup:
          pattern: "^CG_[0-9]{2}$"
          type: string
        codDepartment:
          pattern: "^CD_[0-9]{2}$"
          type: string
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        codDepartment: codDepartment
        surname: surname
        name: name
        self: http://example.com/aeiou
        professorId: professorId
        codGroup: codGroup
        email: ""
    professors:
      type: array
      items:
        $ref: '#/components/schemas/professors_inner'
    student:
      required:
      - email
      type: object
      properties:
        studentId:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
        name:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        surname:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        gender:
          type: string
          enum:
          - male
          - female
          - other
        email:
          pattern: "^(s|S)[0-9]{6}@studenti\\.polito\\.it$"
          type: string
          format: email
        codDegree:
          pattern: "^LM?-([1-9]|[1-9][0-9])$"
          type: string
        nationality:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        enrollmentYear:
          type: integer
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        studentId: studentId
        gender: ""
        nationality: nationality
        codDegree: codDegree
        enrollmentYear: 0
        surname: surname
        name: name
        self: http://example.com/aeiou
        email: ""
    application:
      required:
      - thesisProposalId
      type: object
      properties:
        thesisProposalId:
          type: integer
        studentId:
          pattern: "^(s|S)[0-9]{6}$"
          type: string
        message:
          maxLength: 1000
          type: string
        date:
          type: string
          format: date
        cv:
          type: string
          format: uri
        isReaded:
          type: boolean
          default: false
        isAccepted:
          type: boolean
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        studentId: studentId
        date: 2000-01-23
        cv: http://example.com/aeiou
        isAccepted: true
        self: http://example.com/aeiou
        message: message
        isReaded: false
        thesisProposalId: 0
    applications:
      type: array
      items:
        $ref: '#/components/schemas/applications_inner'
    thesisProposal:
      required:
      - CdS
      - description
      - expirationDate
      - keywords
      - level
      - requirements
      - thesisType
      - title
      type: object
      properties:
        thesisProposalId:
          minimum: 1
          type: integer
        title:
          minLength: 1
          type: string
        supervisor:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
        coSupervisor:
          type: array
          items:
            pattern: "^((p|P)|(e|E))[0-9]{6}$"
            type: string
        keywords:
          minItems: 1
          type: array
          items:
            type: string
        thesisType:
          $ref: '#/components/schemas/thesisProposal_thesisType'
        groups:
          minItems: 1
          type: array
          items:
            minLength: 1
            type: string
        description:
          maxLength: 1000
          minLength: 1
          type: string
        requirements:
          maxLength: 1000
          minLength: 1
          type: string
        notes:
          maxLength: 1000
          minLength: 1
          type: string
        expirationDate:
          type: string
          format: date
        level:
          type: string
          enum:
          - BSc
          - MSc
        CdS:
          minItems: 1
          type: array
          items:
            minLength: 1
            type: string
        isArchieved:
          type: boolean
          default: false
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        requirements: requirements
        notes: notes
        keywords:
        - keywords
        - keywords
        level: ""
        thesisType:
          abroad: true
          inCompany: true
        groups:
        - groups
        - groups
        description: description
        title: title
        coSupervisor:
        - coSupervisor
        - coSupervisor
        isArchieved: false
        CdS:
        - CdS
        - CdS
        self: http://example.com/aeiou
        supervisor: supervisor
        thesisProposalId: 1
        expirationDate: 2000-01-23
    thesisProposals:
      type: array
      items:
        $ref: '#/components/schemas/thesisProposals_inner'
    externalCoSupervisor:
      type: object
      properties:
        externalCoSupervisorId:
          pattern: "^(e|E)[0-9]{6}$"
          type: string
        name:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        surname:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        email:
          type: string
          format: email
        company:
          minLength: 1
          type: string
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        surname: surname
        name: name
        externalCoSupervisorId: externalCoSupervisorId
        self: http://example.com/aeiou
        company: company
        email: ""
    externalCoSupervisors:
      type: array
      items:
        $ref: '#/components/schemas/externalCoSupervisors_inner'
    professors_inner:
      type: object
      properties:
        professorId:
          pattern: "^(p|P)[0-9]{6}$"
          type: string
        name:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        surname:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        surname: surname
        name: name
        self: http://example.com/aeiou
        professorId: professorId
    applications_inner:
      type: object
      properties:
        thesisProposalId:
          minimum: 1
          type: integer
        thesisProposalTitle:
          minLength: 1
          type: string
        date:
          type: string
          format: date
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        date: 2000-01-23
        thesisProposalTitle: thesisProposalTitle
        self: http://example.com/aeiou
        thesisProposalId: 1
    thesisProposal_thesisType:
      required:
      - abroad
      - inCompany
      type: object
      properties:
        inCompany:
          type: boolean
        abroad:
          type: boolean
      additionalProperties: false
      example:
        abroad: true
        inCompany: true
    thesisProposals_inner:
      type: object
      properties:
        thesisProposalId:
          minimum: 1
          type: integer
        title:
          minLength: 1
          type: string
        keywords:
          minItems: 1
          type: array
          items:
            type: string
        expirationDate:
          type: string
          format: date
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        keywords:
        - keywords
        - keywords
        self: http://example.com/aeiou
        title: title
        thesisProposalId: 1
        expirationDate: 2000-01-23
    externalCoSupervisors_inner:
      type: object
      properties:
        externalCoSupervisorId:
          pattern: "^(e|E)[0-9]{6}$"
          type: string
        name:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        surname:
          minLength: 1
          pattern: "^[a-zA-Z ]+$"
          type: string
        self:
          type: string
          format: uri
      additionalProperties: false
      example:
        surname: surname
        name: name
        externalCoSupervisorId: externalCoSupervisorId
        self: http://example.com/aeiou
